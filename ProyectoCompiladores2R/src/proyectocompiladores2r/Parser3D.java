
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Nov 21 08:18:02 CST 2011
//----------------------------------------------------

package proyectocompiladores2r;

import java_cup.runtime.Symbol;
import java.util.*;
import java.io.FileReader;
import java.io.File;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.IOException;
import java.util.Vector;
import java.util.LinkedList;
import InterpreteTAC.*;

/** CUP v0.10k generated parser.
  * @version Mon Nov 21 08:18:02 CST 2011
  */
public class Parser3D extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Parser3D() {super();}

  /** Constructor which sets the default scanner. */
  public Parser3D(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\053\000\002\002\004\000\002\003\013\000\002\003" +
    "\011\000\002\015\005\000\002\015\004\000\002\016\005" +
    "\000\002\016\004\000\002\017\007\000\002\020\007\000" +
    "\002\007\004\000\002\007\003\000\002\010\012\000\002" +
    "\010\011\000\002\006\004\000\002\006\003\000\002\004" +
    "\005\000\002\004\004\000\002\005\004\000\002\005\003" +
    "\000\002\011\013\000\002\011\005\000\002\011\010\000" +
    "\002\011\005\000\002\011\011\000\002\011\011\000\002" +
    "\011\011\000\002\011\011\000\002\011\003\000\002\011" +
    "\006\000\002\012\003\000\002\012\003\000\002\012\003" +
    "\000\002\012\003\000\002\012\003\000\002\013\003\000" +
    "\002\013\003\000\002\013\003\000\002\013\003\000\002" +
    "\013\003\000\002\013\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\163\000\004\046\005\001\002\000\004\002\165\001" +
    "\002\000\004\012\164\001\002\000\006\042\010\045\007" +
    "\001\002\000\004\012\163\001\002\000\006\046\014\047" +
    "\013\001\002\000\006\042\154\045\153\001\002\000\004" +
    "\042\022\001\002\000\004\012\021\001\002\000\004\010" +
    "\015\001\002\000\004\037\016\001\002\000\004\013\017" +
    "\001\002\000\004\040\020\001\002\000\004\042\ufffa\001" +
    "\002\000\006\042\ufffd\045\ufffd\001\002\000\004\046\024" +
    "\001\002\000\004\042\031\001\002\000\004\011\025\001" +
    "\002\000\004\037\026\001\002\000\004\013\027\001\002" +
    "\000\004\040\030\001\002\000\004\042\ufff9\001\002\000" +
    "\004\022\033\001\002\000\006\002\uffff\022\033\001\002" +
    "\000\004\012\035\001\002\000\006\002\ufff7\022\ufff7\001" +
    "\002\000\004\043\036\001\002\000\004\044\037\001\002" +
    "\000\004\025\040\001\002\000\020\004\045\005\053\010" +
    "\043\011\042\012\046\023\044\042\041\001\002\000\022" +
    "\004\uffe6\005\uffe6\010\uffe6\011\uffe6\012\uffe6\023\uffe6\026" +
    "\uffe6\042\uffe6\001\002\000\004\037\144\001\002\000\004" +
    "\037\136\001\002\000\004\041\134\001\002\000\004\043" +
    "\116\001\002\000\006\036\064\043\063\001\002\000\006" +
    "\023\044\026\062\001\002\000\020\004\045\005\053\010" +
    "\043\011\042\012\046\023\044\042\041\001\002\000\022" +
    "\004\uffef\005\uffef\010\uffef\011\uffef\012\uffef\023\uffef\026" +
    "\uffef\042\uffef\001\002\000\006\023\ufff3\026\ufff3\001\002" +
    "\000\004\023\054\001\002\000\004\042\055\001\002\000" +
    "\022\004\uffed\005\uffed\010\uffed\011\uffed\012\uffed\023\uffed" +
    "\026\uffed\042\uffed\001\002\000\006\023\044\026\060\001" +
    "\002\000\022\004\ufff0\005\ufff0\010\ufff0\011\ufff0\012\ufff0" +
    "\023\ufff0\026\ufff0\042\ufff0\001\002\000\006\002\ufff6\022" +
    "\ufff6\001\002\000\006\023\ufff4\026\ufff4\001\002\000\006" +
    "\002\ufff5\022\ufff5\001\002\000\004\044\114\001\002\000" +
    "\012\010\065\011\070\012\066\013\071\001\002\000\004" +
    "\037\110\001\002\000\054\004\uffd9\005\uffd9\010\uffd9\011" +
    "\uffd9\012\uffd9\015\uffd9\016\uffd9\017\uffd9\020\uffd9\021\uffd9" +
    "\023\uffd9\026\uffd9\027\uffd9\030\uffd9\031\uffd9\032\uffd9\033" +
    "\uffd9\034\uffd9\040\uffd9\042\uffd9\044\uffd9\001\002\000\034" +
    "\004\uffeb\005\uffeb\010\uffeb\011\uffeb\012\uffeb\015\101\016" +
    "\102\017\104\020\103\021\100\023\uffeb\026\uffeb\042\uffeb" +
    "\001\002\000\004\037\074\001\002\000\056\004\uffd8\005" +
    "\uffd8\010\uffd8\011\uffd8\012\uffd8\015\uffd8\016\uffd8\017\uffd8" +
    "\020\uffd8\021\uffd8\023\uffd8\024\072\026\uffd8\027\uffd8\030" +
    "\uffd8\031\uffd8\032\uffd8\033\uffd8\034\uffd8\040\uffd8\042\uffd8" +
    "\044\uffd8\001\002\000\004\013\073\001\002\000\054\004" +
    "\uffd7\005\uffd7\010\uffd7\011\uffd7\012\uffd7\015\uffd7\016\uffd7" +
    "\017\uffd7\020\uffd7\021\uffd7\023\uffd7\026\uffd7\027\uffd7\030" +
    "\uffd7\031\uffd7\032\uffd7\033\uffd7\034\uffd7\040\uffd7\042\uffd7" +
    "\044\uffd7\001\002\000\006\012\066\013\071\001\002\000" +
    "\004\040\076\001\002\000\004\042\077\001\002\000\022" +
    "\004\uffe9\005\uffe9\010\uffe9\011\uffe9\012\uffe9\023\uffe9\026" +
    "\uffe9\042\uffe9\001\002\000\006\012\uffe0\013\uffe0\001\002" +
    "\000\006\012\uffe4\013\uffe4\001\002\000\006\012\uffe3\013" +
    "\uffe3\001\002\000\006\012\uffe1\013\uffe1\001\002\000\006" +
    "\012\uffe2\013\uffe2\001\002\000\006\012\066\013\071\001" +
    "\002\000\004\042\107\001\002\000\022\004\uffec\005\uffec" +
    "\010\uffec\011\uffec\012\uffec\023\uffec\026\uffec\042\uffec\001" +
    "\002\000\006\012\066\013\071\001\002\000\004\040\112" +
    "\001\002\000\004\042\113\001\002\000\022\004\uffea\005" +
    "\uffea\010\uffea\011\uffea\012\uffea\023\uffea\026\uffea\042\uffea" +
    "\001\002\000\004\042\115\001\002\000\022\004\uffe5\005" +
    "\uffe5\010\uffe5\011\uffe5\012\uffe5\023\uffe5\026\uffe5\042\uffe5" +
    "\001\002\000\006\012\066\013\071\001\002\000\016\027" +
    "\123\030\124\031\120\032\121\033\125\034\126\001\002" +
    "\000\006\012\uffdd\013\uffdd\001\002\000\006\012\uffdc\013" +
    "\uffdc\001\002\000\006\012\066\013\071\001\002\000\006" +
    "\012\uffdf\013\uffdf\001\002\000\006\012\uffde\013\uffde\001" +
    "\002\000\006\012\uffda\013\uffda\001\002\000\006\012\uffdb" +
    "\013\uffdb\001\002\000\004\044\130\001\002\000\004\005" +
    "\131\001\002\000\004\023\132\001\002\000\004\042\133" +
    "\001\002\000\022\004\uffee\005\uffee\010\uffee\011\uffee\012" +
    "\uffee\023\uffee\026\uffee\042\uffee\001\002\000\022\004\045" +
    "\005\053\010\043\011\042\012\046\023\ufff1\026\ufff1\042" +
    "\041\001\002\000\022\004\045\005\053\010\043\011\042" +
    "\012\046\023\ufff2\026\ufff2\042\041\001\002\000\006\012" +
    "\066\013\071\001\002\000\004\040\140\001\002\000\004" +
    "\036\141\001\002\000\006\012\066\013\071\001\002\000" +
    "\004\042\143\001\002\000\022\004\uffe7\005\uffe7\010\uffe7" +
    "\011\uffe7\012\uffe7\023\uffe7\026\uffe7\042\uffe7\001\002\000" +
    "\006\012\066\013\071\001\002\000\004\040\146\001\002" +
    "\000\004\036\147\001\002\000\006\012\066\013\071\001" +
    "\002\000\004\042\151\001\002\000\022\004\uffe8\005\uffe8" +
    "\010\uffe8\011\uffe8\012\uffe8\023\uffe8\026\uffe8\042\uffe8\001" +
    "\002\000\006\002\ufff8\022\ufff8\001\002\000\004\012\162" +
    "\001\002\000\004\046\014\001\002\000\004\042\156\001" +
    "\002\000\004\046\024\001\002\000\004\042\160\001\002" +
    "\000\004\022\033\001\002\000\006\002\000\022\033\001" +
    "\002\000\006\042\ufffe\045\ufffe\001\002\000\006\042\ufffc" +
    "\045\ufffc\001\002\000\006\042\ufffb\045\ufffb\001\002\000" +
    "\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\163\000\006\003\003\016\005\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\015\010\017\011\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\020\022\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\007\031" +
    "\010\033\001\001\000\004\010\151\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\004\051\005\047\006\046\011" +
    "\050\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\004\060\001\001\000\010\004\051\006\055" +
    "\011\056\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\004\060\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\014\066\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\012\104\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\014\074\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\014\105\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\014\110\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\014\116\001" +
    "\001\000\004\013\121\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\014\126\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\005\134\011\050\001\001" +
    "\000\004\011\056\001\001\000\004\014\136\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\014\141\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\014\144\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\014\147" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\017\154\001\001\000\002" +
    "\001\001\000\004\020\156\001\001\000\002\001\001\000" +
    "\006\007\160\010\033\001\001\000\004\010\151\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser3D$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser3D$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser3D$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {
  
    }


//public TablaDeSimbolos TSC=new TablaDeSimbolos();
//public Instruccion  ins=new Instruccion();
//public Exp part;
//public boolean Errores=false;
//public Errores err=new Errores();
public GrafoCuadruplos g=new GrafoCuadruplos();
public void report_error(String msj,Object Info){}
public void report_fatal_error(String msj,Object Info){report_error(msj,Info);}

public void syntax_error(Symbol s)
{
//this.Errores=true;
//Errores.InsertarError(s.left,"Error: No se esperaba: "+s.value.toString());
}


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Parser3D$actions {





  private final Parser3D parser;

  /** Constructor */
  CUP$Parser3D$actions(Parser3D parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Parser3D$do_action(
    int                        CUP$Parser3D$act_num,
    java_cup.runtime.lr_parser CUP$Parser3D$parser,
    java.util.Stack            CUP$Parser3D$stack,
    int                        CUP$Parser3D$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser3D$result;

      /* select the action based on the action number */
      switch (CUP$Parser3D$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // opera ::= ENTERO PUNTO ENTERO 
            {
              String RESULT = null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a2 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT="";
              CUP$Parser3D$result = new java_cup.runtime.Symbol(10/*opera*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // opera ::= ENTERO 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(10/*opera*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // opera ::= ID 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(10/*opera*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // oprela ::= IGUAL 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(9/*oprela*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // oprela ::= NOIGUAL 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(9/*oprela*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // oprela ::= MAYORIGUAL 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(9/*oprela*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // oprela ::= MENORIGUAL 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(9/*oprela*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // oprela ::= MENORQ 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(9/*oprela*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // oprela ::= MAYORQ 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(9/*oprela*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // op ::= MOD 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(8/*op*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // op ::= DIV 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(8/*op*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // op ::= POR 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(8/*op*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // op ::= MENOS 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(8/*op*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // op ::= MAS 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		RESULT=a;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(8/*op*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Instruccion3D ::= ID PA PC PCOMA 
            {
              Cuadruplo RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-3)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-3)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-3)).value;
		Cuadruplo c=new Cuadruplo(null,null,"CALL",a0);RESULT=c;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(7/*Instruccion3D*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-3)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Instruccion3D ::= PCOMA 
            {
              Cuadruplo RESULT = null;
		Cuadruplo c=new Cuadruplo(null,null,";",null);RESULT=c;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(7/*Instruccion3D*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Instruccion3D ::= STACK CA opera CC ASIGNA opera PCOMA 
            {
              Cuadruplo RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-4)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-4)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-4)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		Cuadruplo c=new Cuadruplo(a1,null,"STACK",a0);RESULT=c;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(7/*Instruccion3D*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Instruccion3D ::= HEAP CA opera CC ASIGNA opera PCOMA 
            {
              Cuadruplo RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-4)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-4)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-4)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		Cuadruplo c=new Cuadruplo(a1,null,"HEAP",a0);RESULT=c;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(7/*Instruccion3D*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Instruccion3D ::= ID ASIGNA HEAP CA opera CC PCOMA 
            {
              Cuadruplo RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).value;
		Cuadruplo c=new Cuadruplo(a1,null,"HEAPV",a0);RESULT=c;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(7/*Instruccion3D*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Instruccion3D ::= ID ASIGNA STACK CA opera CC PCOMA 
            {
              Cuadruplo RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).value;
		Cuadruplo c=new Cuadruplo(a1,null,"STACKV",a0);RESULT=c;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(7/*Instruccion3D*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Instruccion3D ::= ID ASIGNA opera 
            {
              Cuadruplo RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		Cuadruplo c=new Cuadruplo(a1,null,"=",a0); RESULT=c;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(7/*Instruccion3D*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Instruccion3D ::= ID ASIGNA opera op opera PCOMA 
            {
              Cuadruplo RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-5)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-5)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-5)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-3)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).right;
		String a2 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		String a3 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		Cuadruplo c=new Cuadruplo(a1,a3,a2,a0); RESULT=c;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(7/*Instruccion3D*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-5)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Instruccion3D ::= GOTO LABEL PCOMA 
            {
              Cuadruplo RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		Cuadruplo c=new Cuadruplo(null,null,"GOTO",a0);RESULT=c;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(7/*Instruccion3D*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Instruccion3D ::= IF PA opera oprela opera PC GOTO LABEL PCOMA 
            {
              Cuadruplo RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-5)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-5)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-5)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-4)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-4)).right;
		String a2 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-4)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		String a3 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		Cuadruplo c=new Cuadruplo(a0,a2,a1,a3);RESULT=c;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(7/*Instruccion3D*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-8)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // L ::= Instruccion3D 
            {
              ListaCuadruplos RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		Cuadruplo a0 = (Cuadruplo)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		ListaCuadruplos res= new ListaCuadruplos(); res.L.add(a0); RESULT=res;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(3/*L*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // L ::= L Instruccion3D 
            {
              ListaCuadruplos RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		ListaCuadruplos a0 = (ListaCuadruplos)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		Cuadruplo a1 = (Cuadruplo)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		a0.L.add(a1); RESULT=a0;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(3/*L*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // E ::= LABEL DPUNTOS 
            {
              NodoCuadruplos RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		NodoCuadruplos res=new NodoCuadruplos(null,a0,false);RESULT=res;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(2/*E*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // E ::= LABEL DPUNTOS L 
            {
              NodoCuadruplos RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		ListaCuadruplos a1 = (ListaCuadruplos)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		NodoCuadruplos res=new NodoCuadruplos(a1.L,a0,false);RESULT=res;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(2/*E*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // LB ::= E 
            {
              ListaNodoCuadruplos RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		NodoCuadruplos a0 = (NodoCuadruplos)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		this.parser.g.add(a0); ListaNodoCuadruplos res= new ListaNodoCuadruplos(); res.L.add(a0); RESULT=res;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(4/*LB*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // LB ::= LB E 
            {
              ListaNodoCuadruplos RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		ListaNodoCuadruplos a0 = (ListaNodoCuadruplos)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		NodoCuadruplos a1 = (NodoCuadruplos)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		this.parser.g.add(a1); a0.L.add(a1);RESULT=a0;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(4/*LB*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // M ::= VOID ID PA PC LLA LB LLC 
            {
              Object RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-5)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-5)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-5)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		ListaNodoCuadruplos a2 = (ListaNodoCuadruplos)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		NodoCuadruplos ag=new NodoCuadruplos(a2.L,a0); this.parser.g.add(ag); 
              CUP$Parser3D$result = new java_cup.runtime.Symbol(6/*M*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // M ::= VOID ID PA PC LLA L LB LLC 
            {
              Object RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).right;
		String a0 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).right;
		ListaCuadruplos a1 = (ListaCuadruplos)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		ListaNodoCuadruplos a2 = (ListaNodoCuadruplos)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		NodoCuadruplos a=new NodoCuadruplos(a1.L,a0+"_0",false);a2.L.addFirst(a);  NodoCuadruplos ag=new NodoCuadruplos(a2.L,a0); this.parser.g.add(ag); 
              CUP$Parser3D$result = new java_cup.runtime.Symbol(6/*M*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-7)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // LM ::= M 
            {
              Object RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		Object a0 = (Object)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		
              CUP$Parser3D$result = new java_cup.runtime.Symbol(5/*LM*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // LM ::= LM M 
            {
              Object RESULT = null;
		int a0left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int a0right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		Object a0 = (Object)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		
              CUP$Parser3D$result = new java_cup.runtime.Symbol(5/*LM*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // DH ::= INT HEAP CA ENTERO CC 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		this.parser.g.DECheap(a);
              CUP$Parser3D$result = new java_cup.runtime.Symbol(14/*DH*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-4)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // DS ::= INT STACK CA ENTERO CC 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		this.parser.g.DECstack(a);
              CUP$Parser3D$result = new java_cup.runtime.Symbol(13/*DS*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-4)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // LTI ::= INT ID 
            {
              Object RESULT = null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		this.parser.g.DECTI(a1);
              CUP$Parser3D$result = new java_cup.runtime.Symbol(12/*LTI*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // LTI ::= LTI COMA ID 
            {
              Object RESULT = null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		this.parser.g.DECTI(a1);
              CUP$Parser3D$result = new java_cup.runtime.Symbol(12/*LTI*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // LTF ::= FLOAT ID 
            {
              Object RESULT = null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		this.parser.g.DECTF(a1);
              CUP$Parser3D$result = new java_cup.runtime.Symbol(11/*LTF*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // LTF ::= LTF COMA ID 
            {
              Object RESULT = null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right;
		String a1 = (String)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).value;
		this.parser.g.DECTF(a1);
              CUP$Parser3D$result = new java_cup.runtime.Symbol(11/*LTF*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-2)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // s ::= LTI PCOMA DS PCOMA DH PCOMA LM 
            {
              Object RESULT = null;
		
              CUP$Parser3D$result = new java_cup.runtime.Symbol(1/*s*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-6)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // s ::= LTI PCOMA LTF PCOMA DS PCOMA DH PCOMA LM 
            {
              Object RESULT = null;
		
              CUP$Parser3D$result = new java_cup.runtime.Symbol(1/*s*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-8)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          return CUP$Parser3D$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= s EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).value;
		RESULT = start_val;
              CUP$Parser3D$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-1)).left, ((java_cup.runtime.Symbol)CUP$Parser3D$stack.elementAt(CUP$Parser3D$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$Parser3D$parser.done_parsing();
          return CUP$Parser3D$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

